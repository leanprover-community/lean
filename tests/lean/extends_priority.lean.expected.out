@[instance, priority 100, reducible]
def B.to_A : Π {α : Type} [c : B α], A α :=
λ (α : Type) [c : B α], [B.to_A c]
@[instance, priority 37, reducible]
def C.to_B : Π {α : Type} [c : C α], B α :=
λ (α : Type) [c : C α], [C.to_B c]
@[instance, priority 100, reducible]
def D.to_C : Π {α : Type} [c : D α], C α :=
λ (α : Type) [c : D α], [D.to_C c]
@[instance, priority 100]
def B'.to_A' : Π (α : Type) [s : B' α], A' α :=
λ (α : Type) [s : B' α], A'.mk
@[instance, priority 37]
def C'.to_B' : Π (α : Type) [s : C' α], B' α :=
λ (α : Type) [s : C' α], B'.mk
@[instance, priority 100]
def D'.to_C' : Π (α : Type) [s : D' α], C' α :=
λ (α : Type) [s : D' α], C'.mk
