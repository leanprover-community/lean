@[instance, priority 100, reducible]
def B.to_A : Π {α : Type} [_ : B α], A α :=
λ (α : Type) [self : B α], [B.to_A self]
@[instance, priority 37, reducible]
def C.to_B : Π {α : Type} [_ : C α], B α :=
λ (α : Type) [self : C α], [C.to_B self]
@[instance, priority 100, reducible]
def D.to_C : Π {α : Type} [_ : D α], C α :=
λ (α : Type) [self : D α], [D.to_C self]
@[instance, priority 100]
def B'.to_A' : Π (α : Type) [_ : B' α], A' α :=
λ (α : Type) [self : B' α], A'.mk
@[instance, priority 37]
def C'.to_B' : Π (α : Type) [_ : C' α], B' α :=
λ (α : Type) [self : C' α], B'.mk
@[instance, priority 100]
def D'.to_C' : Π (α : Type) [_ : D' α], C' α :=
λ (α : Type) [self : D' α], C'.mk
