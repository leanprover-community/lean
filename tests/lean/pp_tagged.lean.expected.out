(tag_expr [app_fn]
  `(f x y)
  (tag_expr [app_fn] `(f x) (tag_expr [app_fn] `(f) "f") "\n" (tag_expr [app_arg] `(x) "x"))
  "\n"
  (tag_expr [app_arg] `(y) "y"))
"\n"
(tag_expr [app_arg] `(z) "z")
(tag_expr [app_fn, app_arg]
  `(has_add.add.{0} nat nat.has_add x y)
  (tag_expr [app_fn, app_arg] `(x) "x")
  " +"
  "\n"
  (tag_expr [app_arg] `(y) "y"))
" +"
"\n"
(tag_expr [app_arg] `(z) "z")
(tag_expr [app_fn, app_arg] `(x) "x")
" ="
"\n"
(tag_expr [app_arg] `(y) "y")
"("
(tag_expr [app_fn, app_arg] `(x) "x")
",\n"
(tag_expr [app_arg] `(y) "y")
")"
"("
(tag_expr [app_fn, app_arg] `(w) "w")
",\n"
(tag_expr [app_arg, app_fn, app_arg] `(x) "x")
",\n"
(tag_expr [app_arg, app_arg, app_fn, app_arg] `(y) "y")
",\n"
(tag_expr [app_arg, app_arg, app_arg] `(z) "z")
")"
"{"
""
"x"
" "
":"
"\n"
(tag_expr [app_arg, lam_var_type] `(nat) "ℕ")
" "
"|"
" "
(tag_expr [app_arg, lam_body] `(false) "false")
"}"
"{"
(tag_expr [app_fn, app_arg] `(w) "w")
",\n"
(tag_expr [app_arg, app_fn, app_arg] `(x) "x")
",\n"
(tag_expr [app_arg, app_arg, app_fn, app_arg] `(y) "y")
",\n"
(tag_expr [app_arg, app_arg, app_arg, app_arg] `(z) "z")
"}"
(tag_expr [app_fn, app_arg] `(int.of_nat) "int.of_nat")
" ="
"\n"
(tag_expr [app_arg] `(coe.{1 1} nat int (coe_to_lift.{1 1} nat int (coe_base.{1 1} nat int int.has_coe))) "coe")
(tag_expr [app_fn, app_arg] `(int.of_nat) "int.of_nat")
" ="
"\n"
(tag_expr [app_arg] `(bar nat.inhabited nat.inhabited) "bar")
(tag_expr [app_fn, app_arg] `(int.of_nat) "int.of_nat")
" ="
"\n"
(tag_expr [app_arg]
  `(foo nat nat.inhabited nat.inhabited)
  (tag_expr [app_fn, app_fn, app_fn] `(foo) "foo")
  "\n"
  (tag_expr [app_fn, app_fn, app_arg] `(nat) "ℕ"))
