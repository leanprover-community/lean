add_executable(name name.cpp ${LIB_OBJ_UTIL})
target_link_libraries(name ${EXTRA_LIBS})
add_exec_test(name "name")
add_executable(sequence sequence.cpp ${LIB_OBJ_UTIL})
target_link_libraries(sequence ${EXTRA_LIBS})
add_exec_test(sequence "sequence")
add_executable(sexpr_tst sexpr.cpp ${LIB_OBJ_UTIL} $<TARGET_OBJECTS:numerics> $<TARGET_OBJECTS:sexpr>)
target_link_libraries(sexpr_tst ${EXTRA_LIBS})
add_exec_test(sexpr "sexpr_tst")
add_executable(format format.cpp ${LIB_OBJ_UTIL} $<TARGET_OBJECTS:numerics> $<TARGET_OBJECTS:sexpr>)
target_link_libraries(format ${EXTRA_LIBS})
add_exec_test(format "format")
add_executable(buffer buffer.cpp ${LIB_OBJ_UTIL})
target_link_libraries(buffer ${EXTRA_LIBS})
add_exec_test(buffer "buffer")
add_executable(list list.cpp ${LIB_OBJ_UTIL})
target_link_libraries(list ${EXTRA_LIBS})
add_exec_test(list "list")
add_executable(scoped_set scoped_set.cpp ${LIB_OBJ_UTIL})
target_link_libraries(scoped_set ${EXTRA_LIBS})
add_exec_test(scoped_set "scoped_set")
add_executable(options options.cpp ${LIB_OBJ_UTIL} $<TARGET_OBJECTS:numerics> $<TARGET_OBJECTS:sexpr>)
target_link_libraries(options ${EXTRA_LIBS})
add_exec_test(options "options")
add_executable(scoped_map scoped_map.cpp ${LIB_OBJ_UTIL})
target_link_libraries(scoped_map ${EXTRA_LIBS})
add_exec_test(scoped_map "scoped_map")
add_executable(rb_tree rb_tree.cpp ${LIB_OBJ_UTIL})
target_link_libraries(rb_tree ${EXTRA_LIBS})
add_exec_test(rb_tree "rb_tree")
add_executable(rb_map rb_map.cpp ${LIB_OBJ_UTIL})
target_link_libraries(rb_map ${EXTRA_LIBS})
add_exec_test(rb_map "rb_map")
add_executable(exception exception.cpp ${LIB_OBJ_UTIL})
target_link_libraries(exception ${EXTRA_LIBS})
add_exec_test(exception "exception")
add_executable(bit_tricks bit_tricks.cpp ${LIB_OBJ_UTIL})
target_link_libraries(bit_tricks ${EXTRA_LIBS})
add_exec_test(bit_tricks "bit_tricks")
add_executable(hash hash.cpp ${LIB_OBJ_UTIL})
target_link_libraries(hash ${EXTRA_LIBS})
add_exec_test(hash "hash")
add_executable(safe_arith safe_arith.cpp ${LIB_OBJ_UTIL})
target_link_libraries(safe_arith ${EXTRA_LIBS})
add_exec_test(safe_arith "safe_arith")
add_executable(set set.cpp ${LIB_OBJ_UTIL})
target_link_libraries(set ${EXTRA_LIBS})
add_exec_test(set "set")
add_executable(optional optional.cpp ${LIB_OBJ_UTIL})
target_link_libraries(optional ${EXTRA_LIBS})
add_exec_test(optional "optional")
add_executable(stackinfo stackinfo.cpp ${LIB_OBJ_UTIL})
target_link_libraries(stackinfo ${EXTRA_LIBS})
add_exec_test(stackinfo "stackinfo")
add_executable(serializer serializer.cpp ${LIB_OBJ_UTIL})
target_link_libraries(serializer ${EXTRA_LIBS})
add_exec_test(serializer "serializer")
add_executable(trie trie.cpp ${LIB_OBJ_UTIL})
target_link_libraries(trie ${EXTRA_LIBS})
add_exec_test(trie "trie")
add_executable(lru_cache lru_cache.cpp ${LIB_OBJ_UTIL})
target_link_libraries(lru_cache ${EXTRA_LIBS})
add_exec_test(lru_cache "lru_cache")
add_executable(worker_queue worker_queue.cpp ${LIB_OBJ_UTIL})
target_link_libraries(worker_queue ${EXTRA_LIBS})
add_exec_test(worker_queue "worker_queue")
add_executable(thread thread.cpp ${LIB_OBJ_UTIL})
target_link_libraries(thread ${EXTRA_LIBS})
add_exec_test(thread "thread")
add_executable(bitap_fuzzy_search bitap_fuzzy_search.cpp ${LIB_OBJ_UTIL})
target_link_libraries(bitap_fuzzy_search ${EXTRA_LIBS})
add_exec_test(bitap_fuzzy_search "bitap_fuzzy_search")